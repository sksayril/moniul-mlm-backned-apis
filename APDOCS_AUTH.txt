==============================================
API DOCUMENTATION - AUTHENTICATION ENDPOINTS
==============================================

BASE URL: http://localhost:3100

--------------------------------------------------
1. USER SIGNUP
--------------------------------------------------
Endpoint: POST /api/auth/signup
Description: Register a new user account (optionally with a referral code to join MLM network)

Request:
```
POST /api/auth/signup HTTP/1.1
Host: localhost:3100
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john@example.com",
  "password": "password123",
  "referralCode": "ABC123XY"  // Optional: Join MLM network during signup
}
```

Success Response (201 Created):
```
{
  "status": "success",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "data": {
    "user": {
      "_id": "60d5ec9af11ab83456789012",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "subscription": {
        "active": false,
        "expiryDate": null,
        "plan": null
      },
      "tpin": {
        "value": null,
        "active": false,
        "requestDate": null
      },
      "paymentDetails": [],
      "createdAt": "2023-06-25T12:00:00.000Z",
      "updatedAt": "2023-06-25T12:00:00.000Z"
    }
  }
}
```

Error Response (400 Bad Request):
```
{
  "status": "error",
  "message": "User already exists"
}
```

--------------------------------------------------
2. USER SIGNIN
--------------------------------------------------
Endpoint: POST /api/auth/signin
Description: Login an existing user

Request:
```
POST /api/auth/signin HTTP/1.1
Host: localhost:3100
Content-Type: application/json

{
  "email": "john@example.com",
  "password": "securepassword123"
}
```

Success Response (200 OK):
```
{
  "status": "success",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "data": {
    "user": {
      "_id": "60d5ec9af11ab83456789012",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "subscription": {
        "active": false,
        "expiryDate": null,
        "plan": null
      },
      "tpin": {
        "value": null,
        "active": false,
        "requestDate": null
      },
      "paymentDetails": [],
      "createdAt": "2023-06-25T12:00:00.000Z",
      "updatedAt": "2023-06-25T12:00:00.000Z"
    }
  }
}
```

Error Response (401 Unauthorized):
```
{
  "status": "error",
  "message": "Incorrect email or password"
}
```

--------------------------------------------------
3. GET CURRENT USER PROFILE
--------------------------------------------------
Endpoint: GET /api/auth/me
Description: Retrieve the profile of currently logged-in user

Request:
```
GET /api/auth/me HTTP/1.1
Host: localhost:3100
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

Success Response (200 OK):
```
{
  "status": "success",
  "data": {
    "user": {
      "_id": "60d5ec9af11ab83456789012",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "subscription": {
        "active": false,
        "expiryDate": null,
        "plan": null
      },
      "tpin": {
        "value": null,
        "active": false,
        "requestDate": null
      },
      "paymentDetails": [],
      "createdAt": "2023-06-25T12:00:00.000Z",
      "updatedAt": "2023-06-25T12:00:00.000Z"
    }
  }
}
```

Error Response (401 Unauthorized):
```
{
  "status": "error",
  "message": "Not authorized to access this route"
}
```

--------------------------------------------------
4. UPDATE USER PROFILE
--------------------------------------------------
Endpoint: PATCH /api/auth/updateMe
Description: Update the currently logged-in user's profile

Request:
```
PATCH /api/auth/updateMe HTTP/1.1
Host: localhost:3100
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "name": "John Updated Doe"
}
```

Success Response (200 OK):
```
{
  "status": "success",
  "data": {
    "user": {
      "_id": "60d5ec9af11ab83456789012",
      "name": "John Updated Doe",
      "email": "john@example.com",
      "role": "user",
      "subscription": {
        "active": false,
        "expiryDate": null,
        "plan": null
      },
      "tpin": {
        "value": null,
        "active": false,
        "requestDate": null
      },
      "paymentDetails": [],
      "createdAt": "2023-06-25T12:00:00.000Z",
      "updatedAt": "2023-06-25T12:05:00.000Z"
    }
  }
}
```

Error Response (401 Unauthorized):
```
{
  "status": "error",
  "message": "Not authorized to access this route"
}
```

Note: To use these APIs, you'll need to:
1. First sign up to get a JWT token
2. Include the JWT token in the Authorization header as "Bearer [token]" for protected routes
